---
import SectionLayout from "@/layouts/SectionLayout.astro";
---

<SectionLayout variant="color">
    <!-- Pop up message submitted message -->

    <dialog id="modal-overlay" class="modal-overlay hidden">
        <article class="modal-content">
            <div class="modal-header">
                <button id="close-modal" class="close-button">&times;</button>
            </div>
            <section class="modal-body">
                <!-- <section class="success-icon">âœ“</section> -->
                <h3 class="md__font">Thanks for your message</h3>
                <p class="sm__font" id="modal-message">
                    We'll be in touch very soon.
                </p>
            </section>
            <div class="modal--button__container">
                <button id="modal-button" class="modal-button">Perfect!</button>
            </div>
        </article>
    </dialog>

    <!-- Contact form -->
    <main>
        <!-- INVISIBLE FORM FIELDS - CONFIGURE FORM TO WORK WITH WEB3FORMS, SET SUBMISSION SUBJECT LINE, PREVENT SPAM
                 <form> action - defines the location (URL) where the form's collected data should be sent when it is submitted.
                 <input> 1 -  type is hidden/ input hosts the Web3Forms access key
                 <input> 2 -  type is hidded/ sets the email subject line received when form is submitted. Currently set to 'new submission from moneypennies'
                 <input> 3 - type is checkbox. Purpose is spam prevention. Hidden from real users but bots might fill it out allowing Web3Forms to filter out spam submissions. 
                 (Spam prevention not as sophisticated as a hcaptcha check box (but less annoying). Will update if Suzanne receives spam.)-->
        <section class="section__contact02">
            <!--contact info -->
            <section class="contact--contact-headings">
                <aside class="contact--heading">
                    <h2 class="md__font">CONTACT</h2>
                    <p>suzanne@moneypennies.biz</p>
                    <p>07967 826 038</p>
                </aside>

                <aside class="based--heading">
                    <h2 class="md__font">BASED IN</h2>
                    <p>Manchester, UK</p>
                </aside>
            </section>

            <form
                action="https://api.web3forms.com/submit"
                method="POST"
                id="form"
                class="form-container"
            >
                <input
                    type="hidden"
                    name="replyto"
                    value="candacerosedavies@gmail.com"
                />

                <input
                    type="hidden"
                    name="access_key"
                    value="92c59d11-5b7e-4cfb-89b6-51c8d2e1ba5f"
                />
                <input
                    type="hidden"
                    name="subject"
                    value="New Submission From Moneypennies site 2.0"
                />
                <input type="checkbox" name="botcheck" class="hidden" />

                <!-- VISIBLE FORM FIELDS-->
                <fieldset class="form-grid sm__font">
                    <legend class="sr-only">Contact Information</legend>

                    <!-- Name field -->
                    <p class="form-field">
                        <label for="name" class="sr-only">Name</label>
                        <input
                            type="text"
                            id="name"
                            name="name"
                            placeholder="Name"
                            required
                        />
                    </p>

                    <!-- Email field -->
                    <p class="form-field">
                        <label for="email" class="sr-only">Email</label>
                        <input
                            type="email"
                            id="email"
                            name="email"
                            placeholder="Email"
                            required
                        />
                    </p>

                    <!-- Phone field -->
                    <p class="form-field">
                        <label for="phone" class="sr-only">Phone</label>
                        <input
                            type="tel"
                            id="phone"
                            name="phone"
                            placeholder="Phone"
                            required
                        />
                    </p>

                    <!-- Message field -->
                    <p class="form-field 10">
                        <label for="message" class="sr-only">Message</label>
                        <textarea
                            id="message"
                            name="message"
                            placeholder="How can we help?"
                            rows="4"
                            required></textarea>
                    </p>

                    <!-- Submit button -->
                    <aside class="form--button__container">
                        <button class="button--02">
                            <a type="submit" class="button--02__text">
                                CONNECT
                            </a>
                        </button>
                    </aside>

                    <!-- Result message (initially hidden) -->
                    <p
                        id="result"
                        class="result-message hidden"
                        role="status"
                        aria-live="polite"
                    >
                    </p>
                </fieldset>
            </form>
        </section>
    </main>
</SectionLayout>

<style lang="scss">
    @use "@/styles/mixins" as *;

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body,
    html {
        margin: 0;
    }

    .section__contact02 {
        display: flex;
        flex-direction: column;
        gap: 4rem;
        align-items: center;

        // min-height: auto;

        @include for-size(tablet, up) {
            gap: 0;
            flex-direction: row;
            width: 100%;
            align-items: flex-start; // Align tops of columns
        }
    }

    .form-container {
        // display: flex;
        // max-width: 80%;

        padding: 0;
        margin: 0;

        @include for-size(tablet, up) {
            flex: 1;
        }

        @include for-size(desktop, up) {
            flex: 1;
            justify-content: flex-end;
            // padding-top: 55vh;
        }
    }

    .form--button__container {
        padding: 4rem;

        @include for-size(tablet, up) {
            padding: 3rem;
        }
    }

    .contact--contact-headings {
        display: flex;
        flex-direction: column;
        max-width: 90%;
        gap: 4rem;
        padding: 1rem 0 0 0;
        margin: 0;
        font-weight: 600 !important;

        @include for-size(tablet, up) {
            flex: 1;
            gap: 6rem;
        }

        @include for-size(desktop, up) {
            flex: 1;
            justify-content: flex-end;
            // padding-top: 55vh;
        }
    }

    h2 {
        padding-bottom: 1rem;
    }

    .contact--heading {
        // width: 80%;
    }

    //-----FORM STYLES-----
    .form-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
        // padding: 2rem;

        @include for-size(tablet, up) {
            grid-template-columns: 1fr;
            gap: 2rem;
        }

        @include for-size(desktop, up) {
            grid-template-columns: 1fr;
            gap: 2rem;
        }
    }

    .form-field {
        border-bottom: 2px solid var(--mp-blue, #22219b);
        padding-bottom: 0.25rem;
        transition: border-color 0.3s;
        width: 100%;

        // &:focus-within {
        //     // border-color: white;
        // }

        @include for-size(tablet, up) {
            width: 60%;
        }

        input,
        textarea {
            width: 100%;
            background-color: transparent;
            // color: white;

            padding: 0.5rem 0;

            &::placeholder {
                color: rgb(34, 33, 155);
                opacity: 0.6;
            }

            &:focus {
                outline: none;
            }
            // @include for-size(tablet, up) {
            //     font-size: clamp(1rem, 3vh, 4rem);
            // }
            // @include for-size(desktop, up) {
            //     font-size: clamp(1rem, 6vh, 5rem);
            // }
        }

        textarea {
            resize: none;
        }
    }

    .message-field {
        grid-template-columns: span 1;
        @include for-size(tablet, up) {
            grid-column: span 1;
        }

        @include for-size(desktop, up) {
            grid-column: span 1;
        }
    }

    .result-message {
        margin-top: 1rem;
        padding: 0.75rem;
        text-align: center;

        &.hidden {
            display: none;
        }
    }

    //-----MODAL STYLES-----

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: var(--mp-blue, #22219b);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;

        &.hidden {
            display: none;
        }
    }

    .modal-content {
        background: var(--off-white, #f6f0e7);
        color: var(--mp-blue, #22219b);
        border-radius: 12px;
        padding: 2rem;
        max-width: 400px;
        width: 90%;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        text-align: center;
        position: relative;
    }

    .modal-header {
        position: absolute;
        top: 10px;
        right: 15px;
    }

    .close-button {
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: var(--mp-blue, #22219b);

        &:hover {
            color: rgba(34, 33, 155, 0.5);
        }
    }

    .success-icon {
        font-size: 3rem;
        color: #f6f0e7;
        margin-bottom: 1rem;
    }

    .modal-body h3 {
        margin-bottom: 1rem;
        color: var(--mp-blue, #22219b);
    }

    .modal-body p {
        margin-bottom: 1.5rem;
        color: var(--mp-blue, #22219b);
    }

    .modal-button {
        background-color: var(--mp-blue, #22219b);
        color: var(--off-white, #f6f0e7);
        border: none;
        padding: 0.75rem 2rem;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;

        &:hover {
            background-color: var(--off-white, #f6f0e7);
            color: var(--mp-blue, #22219b);
            border: 1px solid #22219b;
        }
    }
</style>

<script>
    import Button from "@/UI/Button.astro";

    const form = document.getElementById("form");
    const result = document.getElementById("result");

    // Defining the modal functions OUTSIDE the form submit handler
    function showModal(message, type) {
        const modal = document.getElementById("modal-overlay");
        const modalMsg = document.getElementById("modal-message");
        // const icon = document.querySelector(".success-icon") as HTMLElement;
        const modalHeading = document.querySelector(
            ".modal-body h3",
        ) as HTMLElement;
        const modalButton = document.getElementById(
            "modal-button",
        ) as HTMLElement;

        // Add null checks
        if (!modal || !modalMsg) {
            console.error("Modal elements not found");
            return;
        }

        modalMsg.textContent = message;

        if (type === "error") {
            // icon.textContent = "âš ";
            // icon.style.color = "#f6f0e7";
            modalHeading.textContent = "Connection Error";
            modalButton.textContent = "Go Back";
            // } else {
            //     icon.textContent = "âœ“";
            //     icon.style.color = "#f6f0e7";
            // }
        }

        modal.classList.remove("hidden");
    }

    function closeModal() {
        const modal = document.getElementById("modal-overlay");
        if (modal) {
            modal.classList.add("hidden");
        }
    }

    //-----FORM SUBMIT HANDLER-----
    if (form) {
        form.addEventListener("submit", async function (e) {
            e.preventDefault();

            const formElement = form;
            if (!(formElement instanceof HTMLFormElement)) {
                console.error("Form element is not a valid form");
                return;
            }

            const formData = new FormData(formElement);
            const object = Object.fromEntries(formData);
            const json = JSON.stringify(object);

            // Check if result element exists before using it
            if (result) {
                result.innerHTML = "Sending message...";
                result.className = "result-message mp-blue";
                result.style.display = "block";
            }
            try {
                console.log("Sending form data:", json); //debuggin 02/06/25

                const response = await fetch(
                    "https://api.web3forms.com/submit",
                    {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded",
                        },
                        body: new URLSearchParams(object).toString(),
                    },
                );

                console.log("Response status:", response.status); //debugging 02/06/25
                const responseData = await response.json();
                console.log("Response data:", responseData); //debugging 02/06/25

                // Hide the inline result message (KEEP THIS)
                if (result) {
                    result.style.display = "none";
                }

                // Show modal instead
                if (response.status === 200) {
                    showModal("We'll be in touch very soon!", "success");
                    if (formElement instanceof HTMLFormElement) {
                        formElement.reset();
                    }
                } else {
                    showModal(
                        responseData.message ||
                            "Something went wrong. Please try again.",
                        "error",
                    );
                }
            } catch (error) {
                console.log(error);
                if (result) {
                    result.style.display = "none";
                }
                showModal(
                    "Please check your connection and try again.",
                    "error",
                );
            }
        });
    }

    // Add event listeners for closing modal (wait for DOM to be ready)
    document.addEventListener("DOMContentLoaded", function () {
        // Modal close event listeners with null checks
        const closeButton = document.getElementById("close-modal");
        const modalButton = document.getElementById("modal-button");
        const modalOverlay = document.getElementById("modal-overlay");

        if (closeButton) {
            closeButton.addEventListener("click", closeModal);
        }

        if (modalButton) {
            modalButton.addEventListener("click", closeModal);
        }

        if (modalOverlay) {
            modalOverlay.addEventListener("click", function (e) {
                if (e.target === this) closeModal(); // Close when clicking outside
            });
        }
    });

    // Clear form when page loads (handles back button)
    window.addEventListener("pageshow", function (event) {
        if (event.persisted) {
            const formElement = document.getElementById("form");
            if (formElement instanceof HTMLFormElement) {
                formElement.reset();
            }
        }
    });

    // Also clear form on page load
    document.addEventListener("DOMContentLoaded", function () {
        const formElement = document.getElementById("form");
        if (formElement instanceof HTMLFormElement) {
            formElement.reset();
        }

        // ----- TO DO Clear form on network error back button? -----
    });
</script>
