---
import Hamburger from "./Hamburger.astro"
---

<!-- The javascript requires the inline styling, on the styles that will change on scroll.  -->
<header class="fixed top-0 left-0 right-0 z-50 transition-all duration-300">
  <nav class="container mx-auto px-4 py-4 flex justify-between items-center">
    <div class="logo text-white font-light text-3xl transition-colors duration-300">
      Moneypennies logo
    </div>
    <div class="desktop-nav">
      <a href="/Contact/">
        <button
          class="contact-button nav-button px-4 py-2 text-white hover:text-black border font-light rounded-full border-white bg-transparent hover:bg-white hover:border-black hover:bg-opacity-10 transition-all duration-300 text-3xl"
          aria-label="say hello"
        >
          Say Hello!
        </button>
      </a>
    </div>
    <Hamburger />
  </nav>
</header>

<script>
//responsive styles


  // Nav styles that change on scroll
  const header = document.querySelector("header");
  const logo = document.querySelector(".logo");
  const buttons = document.querySelectorAll(".nav-button");

  const headerStates = {
    scrolled: {
      add: {
        header: ["bg-white/30", "backdrop-blur-sm", "fade-in"],
        logo: ["text-stone-950"],
        button: [
          "text-stone-950",
          "border-stone-950",
          "hover:bg-stone-950",
          "hover:bg-opacity-30",
          "hover:text-white",
        ],
      },
      remove: {
        header: ["bg-transparent"],
        logo: ["text-white"],
        button: [
          "text-white",
          "border-white",
          "hover:bg-white",
          "hover:bg-opacity-10",
        ],
      },
    },
    reset: {
      add: {
        header: ["bg-transparent"],
        logo: ["text-white"],
        button: [
          "text-white",
          "border-white",
          "hover:text-black",
          "hover:bg-opacity-30",
        ],
      },
      remove: {
        header: ["bg-white/30", "backdrop-blur-sm", "fade-in"],
        logo: ["text-stone-950"],
        button: ["text-stone-950", "border-stone-950", "hover:text-white"],
      },
    },
  };

  const handleScroll = () => {
    const headerScrollThreshold = window.innerHeight * 0;
    const hasScrolledPastHeaderThreshold =
      window.scrollY > headerScrollThreshold;

    const currentHeaderState = hasScrolledPastHeaderThreshold
      ? headerStates.scrolled
      : headerStates.reset;

    // Apply header classes
    header?.classList.add(...currentHeaderState.add.header);
    header?.classList.remove(...currentHeaderState.remove.header);

    // Apply logo classes
    logo?.classList.add(...currentHeaderState.add.logo);
    logo?.classList.remove(...currentHeaderState.remove.logo);

    // Apply button classes
    buttons.forEach((button) => {
      button.classList.add(...currentHeaderState.add.button);
      button.classList.remove(...currentHeaderState.remove.button);
    });
  };

  window.addEventListener("scroll", handleScroll);
</script>

<style>
  /* responsive nav styles for hamburger component */
      .desktop-nav {
    display: flex;
  }

  @media (max-width: 768px) {
    .desktop-nav {
      display: none !important;
    }
  
  }
  
</style>