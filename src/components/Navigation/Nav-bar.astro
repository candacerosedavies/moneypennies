---
import Hamburger from "./Hamburger.astro";
---

<a href="#main-content" class="link--skip">Skip to main content</a>

<!----- inline styling for JS  ----->
<header class="fixed top-0 left-0 right-0 z-50">
  <ul class="header mx-auto flex justify-between items-center px-2">
    <li
      role="navigation"
      aria-label="moneypennies text logo and home button"
      class="button--nav container__logo sm__font"
    >
      <nav class="leading-none">
        <a href="/" class="button--nav__text">moneyPennies</a>

        <!-- <a
          href="/"
          onclick="console.log('Logo clicked'); window.location.href='/'; return false;"
          class="button--nav__text">moneyPennies</a
        > -->
      </nav>
    </li>
    <nav
      class="nav__button-container leading-none"
      role="navigation"
      aria-label="Say hello on our contact page"
    >
      <li class="button--nav desktop__nav sm__font">
        <a href="/contact/" class="button--nav__text">say hello</a>
        <!-- <button onclick="window.location.href='/contact/'">
        <span class="animated__span">say hello</span>
      </button> -->
      </li>
    </nav>
    <Hamburger />
  </ul>
</header>

<script>
  // Nav styles that change on scroll
  const header = document.querySelector("header");

  const headerStates = {
    scrolled: {
      add: {
        header: ["backdrop-blur-md", "fade-in"],
        // buttons: ["!text-black"],
      },
      remove: {
        header: ["bg-transparent"],
        buttons: ["!text-white"],
      },
    },
    reset: {
      add: {
        header: ["bg-transparent"],
        buttons: ["!text-white"],
      },
      remove: {
        header: ["backdrop-blur-sm", "fade-in"],
        // buttons: ["!text-black"],
      },
    },
  };

  const handleScroll = () => {
    // const headerScrollThreshold = window.innerHeight * 0;
    const headerScrollThreshold = 1;
    const hasScrolledPastHeaderThreshold =
      window.scrollY > headerScrollThreshold;

    const currentHeaderState = hasScrolledPastHeaderThreshold
      ? headerStates.scrolled
      : headerStates.reset;

    // Apply header classes
    header?.classList.add(...currentHeaderState.add.header);
    header?.classList.remove(...currentHeaderState.remove.header);

    const buttons = document.querySelectorAll(".button--nav__text");
    buttons.forEach((button) => {
      button.classList.add(...currentHeaderState.add.buttons);
      button.classList.remove(...currentHeaderState.remove.buttons);
    });
  };

  window.addEventListener("scroll", handleScroll);
</script>

<style lang="scss">
  //-----skip to main content styling-----
  .link--skip {
    position: absolute;
    top: -40px;
    left: 6px;
    background: white;
    color: black;
    padding: 8px;
    text-decoration: none;
    z-index: 1000;

    &:focus {
      top: 6px; // Shows when tabbed to
    }
  }

  //-----NAV ITEM POSITIONING-----
  header {
    padding: 1rem 1rem; //smaller screens

    @include for-size(tablet, up) {
      padding: 1rem 3rem; //larger screens
    }
  }

  //-----LOGO-----

  .container__logo::after {
    position: absolute;
    content: "";
    bottom: 0;
    left: 0; //line starts 10% in from the left
    width: 100%; //reduced to 80% from 100% so the line starts 10% further in from the right
    height: 2px;
    //background 3px high = looks like a border-bottom but we have more control over it/can animate
    transition: all 0.25s ease-in;
    z-index: 3;

    /* Above everything else */
  }

  .container__logo {
    display: flex;
    // align-items: center;
    margin-left: 1rem; // Use margin instead of padding to control position without affecting size

    font-family: "zilla slab", sans-serif !important;
    font-weight: 200;
    font-style: italic;

    @include for-size(tablet, up) {
      margin-left: 2rem;
    }
  }

  .logo {
    height: 7vh;
    width: auto; //maintains aspect ratio
    object-fit: contain; //ensure logo fits within dimensions

    @include for-size(tablet, up) {
      height: 8vh;
    }
  }

  .button--nav__text {
    text-transform: none !important;
  }

  header.scrolled .button--nav {
    .button--nav__text {
      color: black;
    }

    &:hover .button--nav__text {
      // color: white;
    }

    &:hover::after {
      background-color: black;
    }
  }

  //-----HAMBURGER VISIBILITY------

  .desktop__nav {
    display: flex; //hamburger icon is visible in view mobile/tablet
  }

  @include for-size(tablet, down) {
    .desktop__nav {
      display: none !important; //hide desktop nav stylings smaller screens
    }
  }
</style>
