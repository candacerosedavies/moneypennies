---
//HAMBURGER COMPONENT

const contact = "SAY HELLO";
const home = "HOME";
---

<!-- Animated Navigation Overlay -->
<nav
  class="overlay overlay--02 section__nav opacity-0 transition-opacity duration-300 ease-in-out"
  id="overlay"
>
  <ul class="menu--container__buttons">
    <li class="button__contact">
      <a class="button--02" href="/contact/" aria-label="Go-to-contact-page">
        <span class="button--02__text md__font">{contact}</span></a
      >
    </li>

    <li class="button__home">
      <a class="button--02" href="/" aria-label="Go-to-home-page">
        <span class="button--02__text md__font">{home}</span>
      </a>
    </li>
  </ul>
</nav>

<!-- Hamburger Menu Button -->
<button class="menu-bars" id="menu-bars" aria-label="menu">
  <aside class="bar-1 bar-1__closed"></aside>
  <!-- <div class="bar-2"></div> -->
  <aside class="bar-2 bar-2__closed"></aside>
</button>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Get the elements we need
    const menuBars = document.getElementById("menu-bars");
    const overlay = document.getElementById("overlay");
    const bar01 = document.querySelector(".bar-1");
    const bar02 = document.querySelector(".bar-2");

    //Track the menu state
    let isMenuOpen = false;

    // Toggle the menu
    function toggleMenu() {
      //Make the toggle work by setting isMenuOpen to the opposite of whatever it currently is (true becomes false, false becomes true)
      //starting state is false, user clicks, this runs "isMenuOpen = !isMenuOpen;", false becomes true. And so on
      isMenuOpen = !isMenuOpen;

      if (isMenuOpen === true) {
        // Show the menu
        overlay?.classList.remove("opacity-0");
        overlay?.classList.add("opacity-100");
        overlay?.setAttribute("aria-hidden", "false");

        // Transform hamburger to X
        menuBars?.classList.add("change");

        //Switch bars to blue class
        bar01.classList.remove("bar-1__closed");
        bar01.classList.add("bar-1__open");

        bar02.classList.remove("bar-2__closed");
        bar02.classList.add("bar-2__open");
      } else {
        // Hide menu
        overlay?.classList.remove("opacity-100");
        overlay?.classList.add("opacity-0");
        overlay?.setAttribute("aria-hidden", "true");

        // Transform X back to hamburger
        menuBars?.classList.remove("change");

        if (window.updateHamburgerColors) {
          window.updateHamburgerColors();
        }
      }
    }

    // Add the click listener
    menuBars?.addEventListener("click", toggleMenu);
  });
</script>

<style lang="scss">
  .section__nav {
    position: relative;
    display: flex;
    width: 100%;
  }

  .menu--container__buttons {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    gap: 5rem;
    justify-content: flex-start;
    align-items: center;
    height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    overflow: hidden;
    background-color: var(--off-white, #f6f0e7);
    padding: 10rem 0rem 0rem 0rem;

    @include for-size(tablet, up) {
      display: none !important;
    }
  }

  /* Only display on mobile and tablet */
  .menu-bars,
  .overlay {
    display: none;
  }

  @media (max-width: 768px) {
    .menu-bars,
    .overlay {
      display: block;
    }

    //.overlay is a parent class that defines the default or 'closed' state of the element.

    .overlay {
      position: fixed;
      z-index: 60;
      top: 0;
      right: 0;
      // width: 40vw;
      height: 100vh;
      // background-color: var(--off-white, #f6f0e7);

      pointer-events: none; //Don't capture clicks when closed - UPDATED BECAUSE LINKS WERE NOT WORKING IN MOBILE VIEW
    }

    .overlay.opacity-100 {
      pointer-events: auto; // Only capture clicks when visible - UPDATED BECAUSE LINKS NOT WORKING IN MOBILE VIEW
    }

    /* Hamburger Menu */
    .menu-bars {
      position: fixed;
      // top: 2rem;
      right: 1rem;
      z-index: 70;
      display: inline;
      cursor: pointer;
    }

    //-----TARGETTING COMBINED CLASSES - for use with the JS in Nav-Bar
    .bar-1.bar-1__closed,
    .bar-2.bar-2__closed {
      width: 35px;
      height: 2px;
      background-color: var(--off-white, #f6f0e7);
      margin: 5px 0;
      transition: 0.4s;
    }

    .bar-1.bar-1__open,
    .bar-2.bar-2__open {
      width: 35px;
      height: 2px;
      background-color: var(--mp-blue, #22219b);
      margin: 5px 0;
      transition: 0.4s;
    }

    /* Hamburger to X animation */
    .change .bar-1 {
      transform: translate(0, 3.5px) rotate(-45deg);
    }

    .change .bar-2 {
      transform: translate(0, -3.5px) rotate(45deg);
    }
  }

  /* Header scrolled states */
  // :global(.header-scrolled) .bar-1,
  // :global(.header-scrolled) .bar-2,
  // :global(.header-scrolled) .bar-3 {
  //   background-color: rgb(28 25 23);
  // }

  // :global(.bg-white\/30) .bar-1,
  // :global(.bg-white\/30) .bar-2,
  // :global(.bg-white\/30) .bar-3 {
  //   background-color: rgb(28 25 23);
  // }
</style>
