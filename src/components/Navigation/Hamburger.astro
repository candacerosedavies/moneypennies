---

---

<!-- Animated Navigation Overlay -->
<nav
  class="overlay section__nav opacity-0 transition-opacity duration-300 ease-in-out"
  id="overlay"
>
  <ul class="menu--container__buttons">
    <li class="button__contact" id="nav-1">
      <button
        class="button--animated"
        onclick="window.location.href='/contact/'"
      >
        <span class="button__text">say hello</span>
      </button>
    </li>
    <li class="button__home" id="nav-2">
      <button class="button--animated" onclick="window.location.href='/'">
        <span class="button__text">home</span>
      </button>
    </li>
  </ul>
</nav>

<!-- Hamburger Menu Button -->
<div class="menu-bars" id="menu-bars" aria-label="menu">
  <div class="bar-1"></div>
  <!-- <div class="bar-2"></div> -->
  <div class="bar-3"></div>
</div>

<script>
  class HamburgerMenu {
    isOpen: boolean;
    menuBars: HTMLElement | null;
    overlay: HTMLElement | null;

    constructor() {
      this.isOpen = false;
      this.menuBars = document.getElementById("menu-bars");
      this.overlay = document.getElementById("overlay");

      this.bindEvents();
    }

    bindEvents() {
      this.menuBars?.addEventListener("click", () => this.toggle());
    }

    toggle() {
      this.isOpen = !this.isOpen;
      this.updateMenu();
    }

    updateMenu() {
      if (this.isOpen) {
        // Show menu
        this.overlay?.classList.remove("opacity-0");
        this.overlay?.classList.add("opacity-100");
        this.overlay?.setAttribute("aria-hidden", "false");

        // Transform hamburger to X
        this.menuBars?.classList.add("change");
      } else {
        // Hide menu
        this.overlay?.classList.remove("opacity-100");
        this.overlay?.classList.add("opacity-0");
        this.overlay?.setAttribute("aria-hidden", "true");

        // Transform X back to hamburger
        this.menuBars?.classList.remove("change");
      }
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    new HamburgerMenu();
  });
</script>

<style lang="scss">
  .section__nav {
    position: relative;
    display: flex;
    width: 100%;
    // justify-content: center;
  }

  .menu--container__buttons {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    gap: 5rem;
    justify-content: flex-start;
    align-items: flex-end;
    height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    overflow: hidden;
    background-color: #293442;
    padding: 10rem 2rem 0rem 0rem;

    @include for-size(tablet, up) {
      display: none !important;
    }
  }

  /* Only display on mobile and tablet */
  .menu-bars,
  .overlay {
    display: none;
  }

  @media (max-width: 768px) {
    .menu-bars,
    .overlay {
      display: block;
    }

    .overlay {
      position: fixed;
      z-index: 60;
      top: 0;
      right: 0;
      // width: 40vw;
      height: 100vh;
      background-color: #293442;
      /* Now uses opacity instead of sliding */
    }

    /* Hamburger Menu */
    .menu-bars {
      position: fixed;
      // top: 2rem;
      right: 1rem;
      z-index: 70;
      display: inline;
      cursor: pointer;
    }

    .bar-1,
    // .bar-2,
    .bar-3 {
      width: 35px;
      height: 2px;
      background-color: #fff;
      margin: 5px 0;
      transition: 0.4s;
    }

    /* Hamburger to X animation */
    .change .bar-1 {
      transform: translate(0, 5px) rotate(-45deg);
    }

    // .change .bar-2 {
    //   opacity: 0;
    // }

    .change .bar-3 {
      transform: translate(0, -5px) rotate(45deg);
    }
  }

  /* Header scrolled states */
  :global(.header-scrolled) .bar-1,
  :global(.header-scrolled) .bar-2,
  :global(.header-scrolled) .bar-3 {
    background-color: rgb(28 25 23);
  }

  :global(.bg-white\/30) .bar-1,
  :global(.bg-white\/30) .bar-2,
  :global(.bg-white\/30) .bar-3 {
    background-color: rgb(28 25 23);
  }
</style>
