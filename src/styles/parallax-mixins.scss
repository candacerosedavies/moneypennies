// _true-parallax-mixins.scss

// True JavaScript parallax - creates actual background movement
@mixin true-parallax-background($image-url,
    $position: center,
    $overlay: rgba(0, 0, 0, 0.4),
    $speed: 0.5) {
    position: relative;
    min-height: 100vh;
    overflow: hidden;

    // Mark this element for JavaScript to find
    &[data-parallax] {
        // JavaScript will handle the parallax effect
    }

    // Create the moving background layer
    &::before {
        content: "";
        position: absolute;
        top: -30%; // Extra space for movement
        left: -10%;
        width: 120%;
        height: 160%; // Much larger for smooth parallax
        background-image: url($image-url);
        background-size: cover;
        background-position: $position;
        background-repeat: no-repeat;
        will-change: transform;
        z-index: 0;

        // This transform will be controlled by JavaScript
        transform: translate3d(0, var(--parallax-offset, 0), 0);
    }

    // Overlay layer
    @if $overlay {
        &::after {
            content: "";
            position: absolute;
            inset: 0;
            background-color: $overlay;
            pointer-events: none;
            z-index: 1;
        }
    }

    // Content layer (highest z-index)
    >* {
        position: relative;
        z-index: 2;
    }
}

// For hero sections with text effects
@mixin true-parallax-hero($image-url,
    $position: center,
    $overlay: rgba(0, 0, 0, 0.6),
    $speed: 0.3) {
    @include true-parallax-background($image-url, $position, $overlay, $speed);

    // Text overlay effects for hero sections
    .text-overlay {
        color: transparent;
        background-image: url($image-url);
        background-position: $position;
        background-size: cover;
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-stroke: 1px white;

        @media (min-width: 768px) {
            -webkit-text-stroke: 1.5px white;
        }
    }
}

// For smaller sections
@mixin true-parallax-section($image-url,
    $height: 60vh,
    $position: center,
    $speed: 0.4) {
    position: relative;
    height: $height;
    overflow: hidden;

    &::before {
        content: "";
        position: absolute;
        top: -20%;
        left: -5%;
        width: 110%;
        height: 140%;
        background-image: url($image-url);
        background-size: cover;
        background-position: $position;
        background-repeat: no-repeat;
        will-change: transform;
        z-index: 0;
        transform: translate3d(0, var(--parallax-offset, 0), 0);
    }

    >* {
        position: relative;
        z-index: 2;
    }
}